using System.IO;
using System.Xml.Linq;
using UnityEditor;
using UnityEngine;

namespace Prime31.Editor
{
    public class LocalizationConstGenerator
    {
        private const string FOLDER_LOCATION = "B.Scripts/AutoGenerated/";
        private const string NAMESPACE = "Lei31.Localizetion";
        private const string CONST_FILE_NAME = "LocalizationConst.cs";
        private const string XML_FILE_LOCATION = "Assets/B.Scripts/Localization/Resources/strings-en.xml";


        [MenuItem("Edit/Generate Localizetion Constants Classes...")]
        public static void RebuildConstantsClassesMenuItem()
        {
            RebuildConstantsClasses();
        }

        private static void RebuildConstantsClasses()
        {
            var folderPath = Application.dataPath + "/" + FOLDER_LOCATION;
            if (!Directory.Exists(folderPath))
                Directory.CreateDirectory(folderPath);

            var txtFile = AssetDatabase.LoadAssetAtPath<TextAsset>(XML_FILE_LOCATION);

            XDocument doc = XDocument.Parse(txtFile.text.ToString());

            XElement root = doc.Element("Resources");

            File.WriteAllText(folderPath + CONST_FILE_NAME,
                GetClassContent(CONST_FILE_NAME.Replace(".cs", string.Empty),
                    root));

            AssetDatabase.ImportAsset("Assets/" + FOLDER_LOCATION + CONST_FILE_NAME, ImportAssetOptions.ForceUpdate);
        }


        private static string GetClassContent(string className, XElement root)
        {
            var output = "";
            output += "//This class is auto-generated do not modify\r\n";
            output += "namespace " + NAMESPACE + "\r\n";
            output += "{\r\n";
            output += "\tpublic static class " + className + "\r\n";
            output += "\t{\r\n";

            foreach (XElement childElement in root.Elements())
            {
                string tag = childElement.Attribute("name").Value;
//                string text = childElement.Attribute("text").Value;

                output += GetConstString(tag);
            }

            output += "\t}\r\n";
            output += "}";


            return output;
        }

        private static string GetConstString(string tag)
        {
            return "\t\tpublic const string " + tag.ToUpper() + " = \"" + tag + "\";" + "\r\n";
        }
    }
}