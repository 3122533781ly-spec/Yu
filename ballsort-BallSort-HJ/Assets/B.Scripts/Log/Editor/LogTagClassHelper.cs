using System.Collections.Generic;
using System.IO;
using UnityEditor;
using UnityEngine;

namespace Fangtang
{
    public class LogTagClassHelper
    {
        private const string NAMESPACE = "Fangtang";
        private const string CLASS_FILE_NAME = "LogTag.cs";
        private const string FOLDER_LOCATION = "Scripts/Utils/Log/";

        public static readonly string Space = "    ";

        public static void UpdateVehicleTypeEnum(List<string> list, int runtimeFlagInt)
        {
            string path = Application.dataPath + "/" + FOLDER_LOCATION;
            string className = CLASS_FILE_NAME.Replace(".cs", string.Empty);

            using (_writer = new StreamWriter(path + className + ".cs", false))
            {
                _writer.NewLine = "\r\n";
                _writer.WriteLine("/////////////////////////////////////////////////");
                _writer.WriteLine("/// This file was autogenerated by a Class Creator");
                _writer.WriteLine("///");
                _writer.WriteLine("/// WARNING! All changes in this file will be lost!");
                _writer.WriteLine("/////////////////////////////////////////////////");
                _writer.WriteLine();

                _writer.WriteLine();

                //class begin
                _writer.WriteLine("using System;");
                _writer.WriteLine("using System.Collections.Generic;");
                _writer.WriteLine("namespace " + NAMESPACE);
                _writer.WriteLine("{");
                _writer.WriteLine(Space + "public class LogTag");
                _writer.WriteLine(Space + "{");

                _writer.WriteLine(Space + Space + "public const int RuntimeFlagInt = " + runtimeFlagInt + ";");
                _writer.WriteLine(Space + Space + "public const int None = " + 0 + ";");

                for (int i = 0; i < list.Count; i++)
                {
                    _writer.WriteLine(Space + Space + "public const int " + list[i] + " = " + (i + 1) + ";");
                }

                _writer.WriteLine(Space + Space + "public static List<string> _tagStrings;");
                _writer.WriteLine(Space + Space + "static LogTag()");
                _writer.WriteLine(Space + Space + "{");
                _writer.WriteLine(Space + Space + Space + "_tagStrings = new List<string>();");
                _writer.WriteLine(Space + Space + Space + "_tagStrings.Add(\"None\");");
                for (int i = 0; i < list.Count; i++)
                {
                    _writer.WriteLine(Space + Space + Space + "_tagStrings.Add(\"" + list[i] + "\");");
                }
                _writer.WriteLine(Space + Space + "}");

                _writer.WriteLine(Space + Space + "public static string GetTag(int tagInt)");
                _writer.WriteLine(Space + Space + "{");
                _writer.WriteLine(Space + Space + Space + "if (tagInt < _tagStrings.Count)");
                _writer.WriteLine(Space + Space + Space + "{");
                _writer.WriteLine(Space + Space + Space + Space + "return _tagStrings[tagInt];");
                _writer.WriteLine(Space + Space + Space + "}");
                _writer.WriteLine(Space + Space + Space + "return \"\";");
                _writer.WriteLine(Space + Space + "}");


                _writer.WriteLine(Space + "}");
                _writer.WriteLine("}");

                _writer.Flush();
                _writer.Close();
            }

            AssetDatabase.ImportAsset("Assets/" + FOLDER_LOCATION + CLASS_FILE_NAME, ImportAssetOptions.ForceUpdate);
            AssetDatabase.Refresh();
        }
        private static StreamWriter _writer;
    }
}